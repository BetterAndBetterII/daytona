name: daytona
x-service-defaults: &service-defaults
  restart: unless-stopped

services:
  netns:
    image: alpine:3.18
    <<: *service-defaults
    privileged: true
    command: ['sh','-c','sleep infinity']
    dns:
      - 10.20.220.50
      - 8.8.8.8
      - 8.8.4.4
      - 1.1.1.1
    dns_search:
      - CUHK.EDU.CN
    ports:
      - 3000:3000
      - 3003:3003
      - 4000:4000
      - 6000:6000
      - 5556:5556
      - 5100:5100
      - 6379:6379
      - 6080:80
      - 8080-8083:8080-8083
  api:
    image: daytonaio/daytona-api:0.2.4
    <<: *service-defaults
    privileged: true
    network_mode: service:netns
    volumes:
      - ./daemon.json:/etc/docker/daemon.json:ro
    environment:
      PORT: ${PORT:-3000}
      # Database
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_USERNAME: ${DB_USERNAME:-user}
      DB_PASSWORD: ${DB_PASSWORD:-pass}
      DB_DATABASE: ${DB_DATABASE:-daytona}
      # Redis
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}
      # OIDC
      OIDC_CLIENT_ID: ${OIDC_CLIENT_ID:-daytona}
      OIDC_ISSUER_BASE_URL: ${OIDC_ISSUER_BASE_URL:-http://localhost:5556/dex}
      OIDC_AUDIENCE: ${OIDC_AUDIENCE:-daytona}
      OIDC_MANAGEMENT_API_ENABLED: ${OIDC_MANAGEMENT_API_ENABLED:-}
      OIDC_MANAGEMENT_API_CLIENT_ID: ${OIDC_MANAGEMENT_API_CLIENT_ID:-}
      OIDC_MANAGEMENT_API_CLIENT_SECRET: ${OIDC_MANAGEMENT_API_CLIENT_SECRET:-}
      OIDC_MANAGEMENT_API_AUDIENCE: ${OIDC_MANAGEMENT_API_AUDIENCE:-}
      # Defaults and UI
      DEFAULT_SNAPSHOT: ${DEFAULT_SNAPSHOT:-ubuntu:22.04}
      DASHBOARD_URL: ${DASHBOARD_URL:-https://sandbox.betterspace.top/dashboard}
      # Analytics
      POSTHOG_API_KEY: ${POSTHOG_API_KEY:-}
      POSTHOG_HOST: ${POSTHOG_HOST:-https://d18ag4dodbta3l.cloudfront.net}
      POSTHOG_ENVIRONMENT: ${POSTHOG_ENVIRONMENT:-local}
      # Registries
      TRANSIENT_REGISTRY_URL: ${TRANSIENT_REGISTRY_URL:-http://localhost:6000}
      TRANSIENT_REGISTRY_ADMIN: ${TRANSIENT_REGISTRY_ADMIN:-admin}
      TRANSIENT_REGISTRY_PASSWORD: ${TRANSIENT_REGISTRY_PASSWORD:-password}
      TRANSIENT_REGISTRY_PROJECT_ID: ${TRANSIENT_REGISTRY_PROJECT_ID:-daytona}
      INTERNAL_REGISTRY_URL: ${INTERNAL_REGISTRY_URL:-http://localhost:6000}
      INTERNAL_REGISTRY_ADMIN: ${INTERNAL_REGISTRY_ADMIN:-admin}
      INTERNAL_REGISTRY_PASSWORD: ${INTERNAL_REGISTRY_PASSWORD:-password}
      INTERNAL_REGISTRY_PROJECT_ID: ${INTERNAL_REGISTRY_PROJECT_ID:-daytona}
      # SMTP
      SMTP_HOST: ${SMTP_HOST:-maildev}
      SMTP_PORT: ${SMTP_PORT:-1025}
      SMTP_USER: ${SMTP_USER:-}
      SMTP_PASSWORD: ${SMTP_PASSWORD:-}
      SMTP_SECURE: ${SMTP_SECURE:-}
      SMTP_EMAIL_FROM: ${SMTP_EMAIL_FROM:-Daytona Team <no-reply@daytona.io>}
      # Object Storage
      S3_ENDPOINT: ${S3_ENDPOINT:-http://minio:9000}
      S3_STS_ENDPOINT: ${S3_STS_ENDPOINT:-http://minio:9000/minio/v1/assume-role}
      S3_REGION: ${S3_REGION:-us-east-1}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY:-minioadmin}
      S3_SECRET_KEY: ${S3_SECRET_KEY:-minioadmin}
      S3_DEFAULT_BUCKET: ${S3_DEFAULT_BUCKET:-daytona}
      S3_ACCOUNT_ID: ${S3_ACCOUNT_ID:-/}
      S3_ROLE_NAME: ${S3_ROLE_NAME:-/}
      # Misc
      ENVIRONMENT: ${ENVIRONMENT:-dev}
      MAX_AUTO_ARCHIVE_INTERVAL: ${MAX_AUTO_ARCHIVE_INTERVAL:-43200}
      OTEL_ENABLED: ${OTEL_ENABLED:-true}
      OTEL_COLLECTOR_URL: ${OTEL_COLLECTOR_URL:-http://jaeger:4318/v1/traces}
      MAINTENANCE_MODE: ${MAINTENANCE_MODE:-false}
      # Proxy wiring
      PROXY_DOMAIN: ${PROXY_DOMAIN:-proxy.localhost:4000}
      PROXY_PROTOCOL: ${PROXY_PROTOCOL:-http}
      PROXY_API_KEY: ${PROXY_API_KEY:-super_secret_key}
      PROXY_TEMPLATE_URL: ${PROXY_TEMPLATE_URL:-http://{{PORT}}-{{sandboxId}}.proxy.localhost:4000}
      # Default Runner settings (used by API)
      DEFAULT_RUNNER_DOMAIN: ${DEFAULT_RUNNER_DOMAIN:-localhost:3003}
      DEFAULT_RUNNER_API_URL: ${DEFAULT_RUNNER_API_URL:-http://localhost:3003}
      DEFAULT_RUNNER_PROXY_URL: ${DEFAULT_RUNNER_PROXY_URL:-http://localhost:3003}
      DEFAULT_RUNNER_API_KEY: ${DEFAULT_RUNNER_API_KEY:-secret_api_token}
      DEFAULT_RUNNER_CPU: ${DEFAULT_RUNNER_CPU:-4}
      DEFAULT_RUNNER_MEMORY: ${DEFAULT_RUNNER_MEMORY:-8}
      DEFAULT_RUNNER_DISK: ${DEFAULT_RUNNER_DISK:-50}
      DEFAULT_RUNNER_GPU: ${DEFAULT_RUNNER_GPU:-0}
      DEFAULT_RUNNER_GPU_TYPE: ${DEFAULT_RUNNER_GPU_TYPE:-none}
      DEFAULT_RUNNER_CAPACITY: ${DEFAULT_RUNNER_CAPACITY:-100}
      DEFAULT_RUNNER_REGION: ${DEFAULT_RUNNER_REGION:-us}
      DEFAULT_RUNNER_CLASS: ${DEFAULT_RUNNER_CLASS:-small}

  proxy:
    image: daytonaio/daytona-proxy:0.2.13
    <<: *service-defaults
    network_mode: service:netns
    environment:
      DAYTONA_API_URL: ${DAYTONA_API_URL:-https://sandbox.betterspace.top/api}
      PROXY_PORT: ${PROXY_PORT:-4000}
      PROXY_DOMAIN: ${PROXY_DOMAIN:-proxy.localhost:4000}
      PROXY_API_KEY: ${PROXY_API_KEY:-super_secret_key}
      PROXY_PROTOCOL: ${PROXY_PROTOCOL:-http}
      OIDC_CLIENT_ID: ${OIDC_CLIENT_ID:-daytona}
      OIDC_CLIENT_SECRET: ${OIDC_CLIENT_SECRET:-}
      OIDC_DOMAIN: ${OIDC_DOMAIN:-http://localhost:5556/dex}
      OIDC_AUDIENCE: ${OIDC_AUDIENCE:-daytona}
      REDIS_HOST: ${REDIS_HOST:-redis}
      REDIS_PORT: ${REDIS_PORT:-6379}

  runner:
    image: daytonaio/daytona-runner:0.2.3
    <<: *service-defaults
    privileged: true
    network_mode: service:netns
    volumes:
      - ./daemon.json:/etc/docker/daemon.json:ro
    environment:
      ENVIRONMENT: ${RUNNER_ENVIRONMENT:-development}
      API_PORT: ${RUNNER_API_PORT:-3003}
      API_TOKEN: ${RUNNER_API_TOKEN:-secret_api_token}
      DAYTONA_BINARY_PATH: ${DAYTONA_BINARY_PATH:-/workspaces/daytona/dist/apps/daemon-amd64}
      LOG_FILE_PATH: ${RUNNER_LOG_FILE_PATH:-/home/daytona/runner/runner.log}
      RESOURCE_LIMITS_DISABLED: ${RESOURCE_LIMITS_DISABLED:-true}
      AWS_ENDPOINT_URL: ${AWS_ENDPOINT_URL:-http://minio:9000}
      AWS_REGION: ${AWS_REGION:-us-east-1}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-minioadmin}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-minioadmin}
      AWS_DEFAULT_BUCKET: ${AWS_DEFAULT_BUCKET:-daytona}

  dex:
    image: dexidp/dex:v2.42.0
    <<: *service-defaults
    volumes:
      - ./dex/config.yaml:/etc/dex/config.yaml
    command: ['dex', 'serve', '/etc/dex/config.yaml']
    network_mode: service:netns

  db:
    image: postgres:11.9
    <<: *service-defaults
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=pass
      - POSTGRES_USER=user
      - POSTGRES_DB=daytona

  pgadmin:
    image: dpage/pgadmin4:9.2.0
    <<: *service-defaults
    entrypoint: ['sh', '-c', 'chmod 600 /pgpass && exec /entrypoint.sh']
    environment:
      PGADMIN_DEFAULT_EMAIL: dev@daytona.io
      PGADMIN_DEFAULT_PASSWORD: pgadmin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    user: root
    volumes:
      - ./pgadmin4/servers.json:/pgadmin4/servers.json
      - ./pgadmin4/pgpass:/pgpass
    depends_on:
      - db
    ports:
      - 5050:80

  redis:
    image: redis:latest
    <<: *service-defaults
    volumes:
      - redis_data:/data

  registry-ui:
    image: joxit/docker-registry-ui:main
    <<: *service-defaults
    environment:
      - SINGLE_REGISTRY=true
      - REGISTRY_TITLE=Docker Registry UI
      - DELETE_IMAGES=true
      - SHOW_CONTENT_DIGEST=true
      - NGINX_PROXY_PASS_URL=http://localhost:6000
      - SHOW_CATALOG_NB_TAGS=true
      - CATALOG_MIN_BRANCHES=1
      - CATALOG_MAX_BRANCHES=1
      - TAGLIST_PAGE_SIZE=100
      - REGISTRY_SECURED=false
      - CATALOG_ELEMENTS_LIMIT=1000
    network_mode: service:netns
  registry:
    image: registry:2.8.2
    <<: *service-defaults
    environment:
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Origin: '[http://registry-ui.example.com]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Methods: '[HEAD,GET,OPTIONS,DELETE]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Credentials: '[true]'
      REGISTRY_HTTP_HEADERS_Access-Control-Allow-Headers: '[Authorization,Accept,Cache-Control]'
      REGISTRY_HTTP_HEADERS_Access-Control-Expose-Headers: '[Docker-Content-Digest]'
      REGISTRY_STORAGE_DELETE_ENABLED: 'true'
      REGISTRY_HTTP_ADDR: localhost:6000
    volumes:
      - registry:/var/lib/registry
    network_mode: service:netns

  maildev:
    image: maildev/maildev
    <<: *service-defaults

  minio:
    image: minio/minio:latest
    <<: *service-defaults
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin
      - MINIO_IDENTITY_STS_EXPIRY="24h"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"

  jaeger:
    image: jaegertracing/all-in-one:1.67.0
    <<: *service-defaults

volumes:
  registry:
    name: registry
  minio_data:
    name: minio_data
  db_data:
    name: db_data
  redis_data:
    name: redis_data
